/**
 * @packageDocumentation
 * @module api.functional.bossRaid.topRankerList
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "nestia-fetcher";
import type { IConnection } from "nestia-fetcher";

import type { IBossRaidUsecase } from "./../../../../../src/api/boss-raid/application/port/boss-raid.usecase.port";

/**
 * 랭커 리스트를 얻는다.
 * 
 * @tag boss-raid
 * @param connection connection Information of the remote HTTP(s) server with headers (+encryption password)
 * @param body myrank로 확인할 유저의 Id
 * 
 * @controller BossRaidController.getRankerList()
 * @path GET /bossRaid/topRankerList
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function getRankerList
    (
        connection: IConnection,
        body: IBossRaidUsecase.GetRank
    ): Promise<getRankerList.Output>
{
    return Fetcher.fetch
    (
        connection,
        getRankerList.ENCRYPTED,
        getRankerList.METHOD,
        getRankerList.path(),
        body,
        getRankerList.stringify
    );
}
export namespace getRankerList
{
    export type Input = IBossRaidUsecase.GetRank;
    export type Output = IBossRaidUsecase.GetRankResponse;

    export const METHOD = "GET" as const;
    export const PATH: string = "/bossRaid/topRankerList";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/bossRaid/topRankerList`;
    }
}